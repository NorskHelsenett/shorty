name: Build and Publish Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}/shorty-server
  WEB_IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}/shorty-web
  CHARTS_REGISTRY: oci://ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/charts

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "SERVER_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-server" >> $GITHUB_ENV
          echo "WEB_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-web" >> $GITHUB_ENV
          echo "CHARTS_REG=oci://ghcr.io/$REPO_OWNER/$REPO_NAME/charts" >> $GITHUB_ENV
          
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.WEB_IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.WEB_IMAGE }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-and-publish-charts:
    runs-on: ubuntu-latest
    needs: build-and-push-images
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "SERVER_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-server" >> $GITHUB_ENV
          echo "WEB_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-web" >> $GITHUB_ENV
          echo "CHARTS_REG=oci://ghcr.io/$REPO_OWNER/$REPO_NAME/charts" >> $GITHUB_ENV
          
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Update Helm chart versions
        run: |
          # Update server chart version
          sed -i "s/^version:.*/version: $VERSION/" charts/shorty-server/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: $VERSION/" charts/shorty-server/Chart.yaml
          sed -i "s/tag:.*/tag: $VERSION/" charts/shorty-server/values.yaml
          
          # Update web chart version
          sed -i "s/^version:.*/version: $VERSION/" charts/shorty-web/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: $VERSION/" charts/shorty-web/Chart.yaml
          sed -i "s/tag:.*/tag: $VERSION/" charts/shorty-web/values.yaml

      - name: Login to GitHub Container Registry for Helm
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and push server Helm chart
        run: |
          helm package ./charts/shorty-server
          helm push shorty-server-$VERSION.tgz ${{ env.CHARTS_REG }}

      - name: Package and push web Helm chart
        run: |
          helm package ./charts/shorty-web
          helm push shorty-web-$VERSION.tgz ${{ env.CHARTS_REG }}

      - name: Create release notes
        id: release_notes
        run: |
          echo "# Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "## Images" >> release_notes.md
          echo "- Server: \`${{ env.REGISTRY }}/${{ env.SERVER_IMAGE }}:$VERSION\`" >> release_notes.md
          echo "- Web: \`${{ env.REGISTRY }}/${{ env.WEB_IMAGE }}:$VERSION\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Helm Charts" >> release_notes.md
          echo "- Server: \`${{ env.CHARTS_REG }}/server:$VERSION\`" >> release_notes.md
          echo "- Web: \`${{ env.CHARTS_REG }}/web:$VERSION\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "helm install shorty-server ${{ env.CHARTS_REG }}/server --version $VERSION" >> release_notes.md
          echo "helm install shorty-web ${{ env.CHARTS_REG }}/web --version $VERSION" >> release_notes.md
          echo '```' >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}