name: Build and Publish Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}/shorty-server
  WEB_IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}/shorty-web
  CHARTS_REGISTRY: oci://ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/charts
  REPO_OWNER: ""
  REPO_NAME: ""
  SERVER_IMAGE: ""
  WEB_IMAGE: ""
  CHARTS_REG: ""
  VERSION: "invalidversion"


jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "SERVER_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-server" >> $GITHUB_ENV
          echo "WEB_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-web" >> $GITHUB_ENV
          echo "CHARTS_REG=oci://ghcr.io/$REPO_OWNER/$REPO_NAME/charts" >> $GITHUB_ENV
          
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.WEB_IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.WEB_IMAGE }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-and-publish-charts:
    runs-on: ubuntu-latest
    needs: build-and-push-images
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "SERVER_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-server" >> $GITHUB_ENV
          echo "WEB_IMAGE=$REPO_OWNER/$REPO_NAME/shorty-web" >> $GITHUB_ENV
          echo "CHARTS_REG=oci://ghcr.io/$REPO_OWNER/$REPO_NAME/charts" >> $GITHUB_ENV
          
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Update Helm chart versions
        run: |
          # Update server chart version
          sed -i "s/^version:.*/version: $VERSION/" charts/shorty/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: $VERSION/" charts/shorty/Chart.yaml
          sed -i "/server:/,/web:/ s/tag:.*/tag: $VERSION/" charts/shorty/values.yaml
          sed -i "/web:/,/allowed/ s/tag:.*/tag: $VERSION/" charts/shorty/values.yaml


      - name: Login to GitHub Container Registry for Helm
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and push server Helm chart
        run: |
          helm package ./charts/shorty
          helm push shorty-$VERSION.tgz ${{ env.CHARTS_REG }}
  Notify-slack:
    name: Notify slack
    runs-on: ubuntu-latest
    needs: update-and-publish-charts
    steps:
      - name: Set version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Notify Slack on new Release
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "text": "ðŸš€ New release available: *v${{ env.VERSION }}*",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "<https://github.com/${{ github.repository }}|${{ github.repository }}>",
                      "short": true
                    },
                    {
                      "title": "Release Notes",
                      "value": "${{ github.event.release.body || 'No description provided.' }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}